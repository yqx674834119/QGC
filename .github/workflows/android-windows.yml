name: Android-Windows

on:
  workflow_dispatch:  # ✅ 允许你在 GitHub Actions 页面点击 Run workflow 启动构建
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths:
      - '.github/workflows/android-windows.yml'
      - 'deploy/android/**'
      - 'src/**'
      - 'android/**'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'translations/*'
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: [Release]

    defaults:
      run:
        shell: cmd

    env:
      ARTIFACT: QGroundControl.apk
      PACKAGE: QGroundControl
      QT_VERSION: 6.8.3
      QT_ANDROID_KEYSTORE_PATH: ${{ github.workspace }}\deploy\android\android_release.keystore
      QT_ANDROID_KEYSTORE_ALIAS: QGCAndroidKeyStore
      QT_ANDROID_KEYSTORE_STORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_KEYSTORE_KEY_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_ABIS: 'arm64-v8a'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 1
          fetch-tags: false

      - name: Get all tags for correct version determination
        working-directory: ${{ github.workspace }}
        run: |
          git fetch --all --tags -f --depth 1

      - name: Initial Setup
        uses: ./.github/actions/common

      - name: Install Qt for Android
        uses: ./.github/actions/qt-android
        with:
          host: windows
          arch: win64_msvc2022_64
          version: ${{ env.QT_VERSION }}
          abis: ${{ env.QT_ANDROID_ABIS }}
          cpm-modules: ${{ runner.temp }}\shadow_build_dir\cpm_modules

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
              -DCMAKE_WARN_DEPRECATED=FALSE
              -DQT_ANDROID_ABIS="${{ env.QT_ANDROID_ABIS }}"
              -DQT_ANDROID_BUILD_ALL_ABIS=OFF
              -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../msvc2022_64"
              -DQT_ANDROID_SIGN_APK=ON
              -DQT_DEBUG_FIND_PACKAGE=ON
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Save APK
        id: upload-apk
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/android-build/*.apk

      - name: Upload to GitHub Releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: ${{ runner.temp }}/shadow_build_dir/android-build/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
